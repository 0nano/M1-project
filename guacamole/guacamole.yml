---
- hosts: localhost
  vars:
    ansible_python_interpreter: /usr/bin/python3 
    region: us-east-1
    instance_type: t2.micro
    key_name: vockey # Change for your key pair
    sec_group: "test-security-group"
    #image_id: ami-0005e0cfe09cc9050 # Latest version of Amazon Linux
    image_id: ami-058bd2d568351da34 # Debian 12 OS
    m1project_repo: "https://github.com/0nano/M1-project.git"
    default_container_name: guacamole_docker
    default_container_image: guacamole/guacd
  vars_files:
    - config_vars.yml
  environment:
    AWS_SHARED_CREDENTIALS_FILE: "{{ aws_creds }}"
  tasks:
    - name: Create a security group
      amazon.aws.ec2_security_group:
        name: "{{ sec_group }}"
        description: "Allow SSH and HTTP"
        region: "{{ region }}"

        rules: 
          - proto: tcp
            ports:
              - 22
              - 80
              - 8080
              - 5432 #inscription.py
              - 3500 # own web server provisoire juste pour test
              - 4500 # dvwa provisoire
              - 3000 # juice shop provisoire
            cidr_ip: 0.0.0.0/0
            rule_desc: allow ssh and http

    - name: Start an instance and add EBS
      amazon.aws.ec2_instance:
        name: "Guacamoleuu"    
        region: "{{ region }}"
        instance_type: "{{ instance_type }}"
        security_group: "{{ sec_group }}"
        key_name: "{{ key_name }}"
        image_id: "{{ image_id }}"
        termination_protection: true # because if not the EC2 instance will be terminated after playbook run
        state: running
      register: ec2
      #   tags:
      #     Environment: Bastion testing
      # tags: ['never', 'create_ec2_instance']

    - name: Facts
      block: # this block prints out instance data

      - name: Get instances facts
        ec2_instance_info:

          region: "{{ region }}"
        register: result

      - name: Instances ID
        debug:
          msg: "ID: {{ item.instance_id }} - State: {{ item.state.name }} - Public DNS: {{ item.public_dns_name }}"
        loop: "{{ result.instances }}"
      tags: always

    - name: "Add new Instance to Host group"
      add_host:
        hostname: "{{ ec2.instances.0.public_ip_address }}"
        groupname: webserver

    - name: "Wait for SSH in Instance"
      wait_for:
        host: "{{ ec2.instances.0.public_ip_address }}"
        port: 22  

    - name: Save IP to file
      ansible.builtin.copy:
        content: "{{ ec2.instances.0.public_ip_address }}"
        dest: ec2_adress.txt
        backup: yes


- name: create ec2 in aws for guacamole
  hosts: webserver
  remote_user: admin
  become: true
  vars_files:
    - config_vars.yml
  vars:
    ansible_ssh_private_key_file: "{{ ssh_key }}"
    ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
  tasks:
   - name: "Installe et deploy docker"
     include_tasks: ../environment/install_docker.yml 
   
   - name: Install guacamole on docker
     git:
       repo: "https://github.com/0nano/M1-project.git"
       dest: project
       clone: yes
       force: yes
       update: yes
       version: ma_branche_provisoire # A changer par le main quand github voudra bien me laisser merge
      
   - name: Create a folder for guacamole if it doesn't exist
     shell: mkdir -p guacamole && chmod 777 guacamole
     ignore_errors: true # au cas ou fichier déjà créer

   - name: Copy docker-compose file
     copy:
       src: project/guacamole/docker-compose.yml
       dest: guacamole/docker-compose.yml
       remote_src: yes

   - name: Create init folder
     shell: mkdir guacamole/init && chmod 777 guacamole/init && umask 0022 init/

   - name: Start guacamole docker
     shell: cd guacamole/ && docker-compose up -d


    
    


